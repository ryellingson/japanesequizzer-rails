.basic-grid {
  display: grid;
  gap: 1rem;
  grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));
}

.photo-grid {
  display: grid;
  gap: 1rem;

  grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
  grid-auto-rows: 240px;
}

/* Medium screens */
@media screen and (min-width: 600px) {
  .grid-card-tall {
    grid-row: span 2 / auto;
  }

  .grid-card-wide {
    grid-column: span 2 / auto;
  }
}


.animated-grid {
  height: 85vh;

  display: grid;
  gap: 1rem;

  /* Explicit grid */
  grid-template-areas:
    'ðŸŒŸ ðŸŒŸ'
    'a  b'
    'c  d';

  grid-template-rows: repeat(3, 1fr );
  grid-template-columns: 1fr 1fr;

  --stagger-delay: 100ms;
}

@keyframes cardEntrance {
  from {
    opacity: 0;
    transform: scale(0.3);
    filter: hue-rotate(180deg);
  }
  to {
    opacity: 1;
    transform: scale(1);
    filter: hue-rotate(0deg);
  }
}

.grid-card {
  background-color: rgb(255, 255, 255);
  border: 1px solid rgba(0,0,0, 0.1);
  border-radius: 5px;
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
  animation: cardEntrance 700ms ease-out;
  animation-fill-mode: backwards;
  transition: 3s;
}

.grid-card:nth-child(1) {
  grid-area: a;
  animation-delay: calc(1 * var(--stagger-delay));
}
.grid-card:nth-child(2) {
  grid-area: b;
  animation-delay: calc(2 * var(--stagger-delay));
}
.grid-card:nth-child(3) {
  grid-area: c;
  animation-delay: calc(3 * var(--stagger-delay));
}
.grid-card:nth-child(4) {
  grid-area: d;
  animation-delay: calc(4 * var(--stagger-delay));
}
.grid-card:last-child {
  grid-area: ðŸŒŸ;
  animation-delay: calc(13 * var(--stagger-delay));
}
